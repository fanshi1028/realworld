name: common

on:
  workflow_call:
    inputs:
      flag:
        description: part of flag to choose an executable
        required: true
        type: string
    secrets:
      CACHIX_AUTH_TOKEN:
        description: cachix token

jobs:
  nix-build:
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11, windows-2019, windows-2022]
        # https://github.com/input-output-hk/haskell.nix/blob/85755332c0698ab90d061c079f3c25710675bb85/docs/reference/supported-ghc-versions.md
        nixpkgsPin: [unstable]
        # NOTE: won't build on ghc921 yet
        ghcVersion: [8107]
        maxMemory: [10, 20]
        flag: ['${{inputs.flag}}']
        exe: [backend, frontend]
        exclude:
          - os: ubuntu-20.04
            maxMemory: 20
          - os: macos-10.15
            maxMemory: 10
          - flag: in-mem
            exe: frontend
          - flag: rel8
            exe: frontend
          - flag: vty
            exe: backend
          - flag: js
            exe: backend
          - flag: warp
            exe: backend

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - uses: cachix/install-nix-action@v16
      with:
        extra_nix_config: |
          substituters = https://cache.nixos.org https://hydra.iohk.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

    - uses: cachix/cachix-action@v10
      with:
        name: fanshi1028-realworld-haskell
        authToken: ${{secrets.CACHIX_AUTH_TOKEN}}
        extraPullNames: nix-community

    - name: nix build exe (-O2)
      if: ${{matrix.os != 'ubuntu-20.04' || matrix.flag == 'rel8' || matrix.flag == 'vty'}}
      run: |
        nix-build -j4 --argstr nixpkgsPin ${{matrix.nixpkgsPin}} \
        --argstr ghcVersion ${{matrix.ghcVersion}} \
        --argstr exeFlag "${{matrix.exe}}-${{matrix.flag}}" \
        --argstr RTS "-N -A128m -n2m -M${{matrix.maxMemory}}g" \
        --arg materializedDir null \
        --arg checkMaterialization false \
        -A realworld-haskell

    - name: nix build exe (-O1)
      if: ${{matrix.os == 'ubuntu-20.04' && matrix.flag == 'in-mem'}}
      run: |
        nix-build -j4 --argstr nixpkgsPin ${{matrix.nixpkgsPin}} \
        --argstr ghcVersion ${{matrix.ghcVersion}} \
        --argstr exeFlag "${{matrix.exe}}-${{matrix.flag}}" \
        --argstr RTS "-N -A128m -n2m -M${{matrix.maxMemory}}g" \
        --arg optimize 1 \
        --arg materializedDir null \
        --arg checkMaterialization false \
        -A realworld-haskell

    - name: nix build exe (-O0)
      if: ${{matrix.os == 'ubuntu-20.04' && matrix.flag == 'js'}}
      run: |
        nix-build -j4 --argstr nixpkgsPin ${{matrix.nixpkgsPin}} \
        --argstr ghcVersion ${{matrix.ghcVersion}} \
        --argstr exeFlag "${{matrix.exe}}-${{matrix.flag}}" \
        --argstr RTS "-N -A128m -n2m -M${{matrix.maxMemory}}g" \
        --arg optimize 0 \
        --arg materializedDir null \
        --arg checkMaterialization false \
        -A realworld-haskell
