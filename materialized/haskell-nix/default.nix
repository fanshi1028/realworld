{
  pkgs = hackage:
    {
      packages = {
        "charset".revision = (((hackage."charset")."0.3.9").revisions).default;
        "cryptohash".revision = (((hackage."cryptohash")."0.11.9").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.cli = false;
        "wcwidth".flags.split-base = true;
        "time-manager".revision = (((hackage."time-manager")."0.0.0").revisions).default;
        "happy".revision = (((hackage."happy")."1.20.0").revisions).default;
        "tasty-smallcheck".revision = (((hackage."tasty-smallcheck")."0.8.2").revisions).default;
        "ghc-boot".revision = (((hackage."ghc-boot")."8.10.7").revisions).default;
        "stm-hamt".revision = (((hackage."stm-hamt")."1.2.0.7").revisions).default;
        "primitive-unlifted".revision = (((hackage."primitive-unlifted")."0.1.3.1").revisions).default;
        "http-api-data".revision = (((hackage."http-api-data")."0.4.3").revisions).default;
        "http-api-data".flags.use-text-show = false;
        "http-media".revision = (((hackage."http-media")."0.8.0.0").revisions).default;
        "jose".revision = (((hackage."jose")."0.8.4").revisions).default;
        "jose".flags.demos = false;
        "tf-random".revision = (((hackage."tf-random")."0.5").revisions).default;
        "servant-client".revision = (((hackage."servant-client")."0.18.3").revisions).default;
        "password".revision = (((hackage."password")."3.0.0.0").revisions).default;
        "mmorph".revision = (((hackage."mmorph")."1.1.5").revisions).default;
        "abstract-deque".revision = (((hackage."abstract-deque")."0.3").revisions).default;
        "abstract-deque".flags.usecas = false;
        "postgresql-binary".revision = (((hackage."postgresql-binary")."0.12.4.1").revisions).default;
        "old-time".revision = (((hackage."old-time")."1.1.0.3").revisions).default;
        "byteorder".revision = (((hackage."byteorder")."1.0.4").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."8.10.7").revisions).default;
        "call-stack".revision = (((hackage."call-stack")."0.4.0").revisions).default;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.6.1").revisions).default;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.tagged = true;
        "distributive".flags.semigroups = true;
        "data-serializer".revision = (((hackage."data-serializer")."0.3.5").revisions).default;
        "streaming-commons".revision = (((hackage."streaming-commons")."0.2.2.3").revisions).default;
        "streaming-commons".flags.use-bytestring-builder = false;
        "data-textual".revision = (((hackage."data-textual")."0.3.0.3").revisions).default;
        "servant".revision = (((hackage."servant")."0.18.3").revisions).default;
        "asn1-encoding".revision = (((hackage."asn1-encoding")."0.9.6").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "polyparse".revision = (((hackage."polyparse")."1.13").revisions).default;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.2").revisions).default;
        "text-short".revision = (((hackage."text-short")."0.1.5").revisions).default;
        "text-short".flags.asserts = false;
        "psqueues".revision = (((hackage."psqueues")."0.2.7.3").revisions).default;
        "lockfree-queue".revision = (((hackage."lockfree-queue")."0.2.3.1").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "uuid".revision = (((hackage."uuid")."1.3.15").revisions).default;
        "HUnit".revision = (((hackage."HUnit")."1.6.2.0").revisions).default;
        "streamly".revision = (((hackage."streamly")."0.8.1.1").revisions).default;
        "streamly".flags.dev = false;
        "streamly".flags.limit-build-mem = false;
        "streamly".flags.no-fusion = false;
        "streamly".flags.has-llvm = false;
        "streamly".flags.use-c-malloc = false;
        "streamly".flags.inspection = false;
        "streamly".flags.debug = false;
        "streamly".flags.streamk = false;
        "streamly".flags.opt = true;
        "streamly".flags.fusion-plugin = false;
        "show-combinators".revision = (((hackage."show-combinators")."0.2.0.0").revisions).default;
        "async".revision = (((hackage."async")."2.2.4").revisions).default;
        "async".flags.bench = false;
        "text".revision = (((hackage."text")."1.2.4.1").revisions).default;
        "base".revision = (((hackage."base")."4.14.3.0").revisions).default;
        "word8".revision = (((hackage."word8")."0.1.3").revisions).default;
        "hourglass".revision = (((hackage."hourglass")."0.2.12").revisions).default;
        "time".revision = (((hackage."time")."1.9.3").revisions).default;
        "bsb-http-chunked".revision = (((hackage."bsb-http-chunked")."0.0.0.4").revisions).default;
        "hashtables".revision = (((hackage."hashtables")."1.2.4.2").revisions).default;
        "hashtables".flags.portable = false;
        "hashtables".flags.bounds-checking = false;
        "hashtables".flags.detailed-profiling = false;
        "hashtables".flags.debug = false;
        "hashtables".flags.sse42 = false;
        "hashtables".flags.unsafe-tricks = true;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.11").revisions).default;
        "bifunctors".flags.tagged = true;
        "bifunctors".flags.semigroups = true;
        "quickcheck-state-machine".revision = (((hackage."quickcheck-state-machine")."0.7.1").revisions).default;
        "kan-extensions".revision = (((hackage."kan-extensions")."5.2.3").revisions).default;
        "cabal-doctest".revision = (((hackage."cabal-doctest")."1.0.9").revisions).default;
        "parsers".revision = (((hackage."parsers")."0.12.10").revisions).default;
        "parsers".flags.binary = true;
        "parsers".flags.parsec = true;
        "parsers".flags.attoparsec = true;
        "network-info".revision = (((hackage."network-info")."0.2.0.10").revisions).default;
        "random".revision = (((hackage."random")."1.2.1").revisions).default;
        "unix-time".revision = (((hackage."unix-time")."0.4.7").revisions).default;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.16.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "template-haskell-compat-v0208".revision = (((hackage."template-haskell-compat-v0208")."0.1.7").revisions).default;
        "fakedata-quickcheck".revision = (((hackage."fakedata-quickcheck")."0.2.0").revisions).default;
        "entropy".revision = (((hackage."entropy")."0.4.1.7").revisions).default;
        "entropy".flags.halvm = false;
        "wai".revision = (((hackage."wai")."3.2.3").revisions).default;
        "easy-file".revision = (((hackage."easy-file")."0.2.2").revisions).default;
        "uri-bytestring".revision = (((hackage."uri-bytestring")."0.3.3.1").revisions).default;
        "uri-bytestring".flags.lib-werror = false;
        "postgres-options".revision = (((hackage."postgres-options")."0.2.0.0").revisions).default;
        "deferred-folds".revision = (((hackage."deferred-folds")."0.9.18.1").revisions).default;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "base64-bytestring".revision = (((hackage."base64-bytestring")."1.1.0.0").revisions).default;
        "cereal".revision = (((hackage."cereal")."0.5.8.2").revisions).default;
        "cereal".flags.bytestring-builder = false;
        "markov-chain-usage-model".revision = (((hackage."markov-chain-usage-model")."0.0.0").revisions).default;
        "cookie".revision = (((hackage."cookie")."0.4.5").revisions).default;
        "utf8-string".revision = (((hackage."utf8-string")."1.0.2").revisions).default;
        "process".revision = (((hackage."process")."1.6.13.2").revisions).default;
        "servant-server".revision = (((hackage."servant-server")."0.18.3").revisions).default;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.7").revisions).default;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.contravariant = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.comonad = true;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.3.0").revisions).default;
        "fusion-plugin-types".revision = (((hackage."fusion-plugin-types")."0.1.0").revisions).default;
        "password-types".revision = (((hackage."password-types")."1.0.0.0").revisions).default;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."1.0.2.0").revisions).default;
        "conduit".revision = (((hackage."conduit")."1.3.4.2").revisions).default;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.6").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "vector".revision = (((hackage."vector")."0.12.3.1").revisions).default;
        "vector".flags.unsafechecks = false;
        "vector".flags.internalchecks = false;
        "vector".flags.wall = false;
        "vector".flags.boundschecks = true;
        "network".revision = (((hackage."network")."3.1.2.7").revisions).default;
        "network".flags.devel = false;
        "invariant".revision = (((hackage."invariant")."0.5.5").revisions).default;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.8").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "asn1-parse".revision = (((hackage."asn1-parse")."0.9.5").revisions).default;
        "cryptonite".revision = (((hackage."cryptonite")."0.29").revisions).default;
        "cryptonite".flags.check_alignment = false;
        "cryptonite".flags.support_sse = false;
        "cryptonite".flags.old_toolchain_inliner = false;
        "cryptonite".flags.integer-gmp = true;
        "cryptonite".flags.use_target_attributes = true;
        "cryptonite".flags.support_deepseq = true;
        "cryptonite".flags.support_pclmuldq = false;
        "cryptonite".flags.support_aesni = true;
        "cryptonite".flags.support_rdrand = true;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.bench = true;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.properties = true;
        "vector-algorithms".flags.boundschecks = true;
        "heaps".revision = (((hackage."heaps")."0.4").revisions).default;
        "generic-monoid".revision = (((hackage."generic-monoid")."0.1.0.1").revisions).default;
        "wai-logger".revision = (((hackage."wai-logger")."2.3.7").revisions).default;
        "validation-selective".revision = (((hackage."validation-selective")."0.1.0.1").revisions).default;
        "lens".revision = (((hackage."lens")."5.0.1").revisions).default;
        "lens".flags.j = false;
        "lens".flags.test-templates = true;
        "lens".flags.benchmark-uniplate = false;
        "lens".flags.trustworthy = true;
        "lens".flags.test-hunit = true;
        "lens".flags.dump-splices = false;
        "lens".flags.inlining = true;
        "lens".flags.test-properties = true;
        "x509".revision = (((hackage."x509")."1.7.6").revisions).default;
        "quickcheck-instances".revision = (((hackage."quickcheck-instances")."0.3.27").revisions).default;
        "quickcheck-instances".flags.bytestring-builder = false;
        "generic-data".revision = (((hackage."generic-data")."0.9.2.1").revisions).default;
        "profunctors".revision = (((hackage."profunctors")."5.6.2").revisions).default;
        "http-types".revision = (((hackage."http-types")."0.12.3").revisions).default;
        "some".revision = (((hackage."some")."1.0.3").revisions).default;
        "some".flags.newtype-unsafe = true;
        "loop".revision = (((hackage."loop")."0.3.0").revisions).default;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.distributive = true;
        "comonad".flags.containers = true;
        "comonad".flags.indexed-traversable = true;
        "logict".revision = (((hackage."logict")."0.7.0.3").revisions).default;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "hasql".revision = (((hackage."hasql")."1.4.5.3").revisions).default;
        "atomic-primops".revision = (((hackage."atomic-primops")."0.8.4").revisions).default;
        "atomic-primops".flags.debug = false;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "data-endian".revision = (((hackage."data-endian")."0.1.1").revisions).default;
        "split".revision = (((hackage."split")."0.2.3.4").revisions).default;
        "time-compat".revision = (((hackage."time-compat")."1.9.6.1").revisions).default;
        "time-compat".flags.old-locale = false;
        "safe".revision = (((hackage."safe")."0.3.19").revisions).default;
        "hspec-core".revision = (((hackage."hspec-core")."2.9.4").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.5").revisions).default;
        "contravariant".flags.tagged = true;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.statevar = true;
        "wl-pprint-text".revision = (((hackage."wl-pprint-text")."1.2.0.2").revisions).default;
        "generic-lens-core".revision = (((hackage."generic-lens-core")."2.2.1.0").revisions).default;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.6").revisions).default;
        "hasql-transaction".revision = (((hackage."hasql-transaction")."1.0.1.1").revisions).default;
        "appar".revision = (((hackage."appar")."0.1.8").revisions).default;
        "type-hint".revision = (((hackage."type-hint")."0.1").revisions).default;
        "tree-diff".revision = (((hackage."tree-diff")."0.2.1.1").revisions).default;
        "ghc".revision = (((hackage."ghc")."8.10.7").revisions).default;
        "setenv".revision = (((hackage."setenv")."0.1.1.3").revisions).default;
        "yaml".revision = (((hackage."yaml")."0.11.7.0").revisions).default;
        "yaml".flags.no-examples = true;
        "yaml".flags.no-exe = true;
        "port-utils".revision = (((hackage."port-utils")."0.2.1.0").revisions).default;
        "asn1-types".revision = (((hackage."asn1-types")."0.3.4").revisions).default;
        "bytestring-builder".revision = (((hackage."bytestring-builder")."0.10.8.2.0").revisions).default;
        "bytestring-builder".flags.bytestring_has_builder = true;
        "higgledy".revision = (((hackage."higgledy")."0.4.1.1").revisions).default;
        "base-compat".revision = (((hackage."base-compat")."0.11.2").revisions).default;
        "tasty-quickcheck".revision = (((hackage."tasty-quickcheck")."0.10.2").revisions).default;
        "http2".revision = (((hackage."http2")."3.0.3").revisions).default;
        "http2".flags.devel = false;
        "http2".flags.h2spec = false;
        "http2".flags.doc = false;
        "servant-auth-server".revision = (((hackage."servant-auth-server")."0.4.6.0").revisions).default;
        "string-conversions".revision = (((hackage."string-conversions")."0.4.0.1").revisions).default;
        "primitive-extras".revision = (((hackage."primitive-extras")."0.10.1.4").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.11.2").revisions).default;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "th-lift-instances".revision = (((hackage."th-lift-instances")."0.1.19").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.2.1.0").revisions).default;
        "ghc-byteorder".revision = (((hackage."ghc-byteorder")."4.11.0.0.10").revisions).default;
        "hspec".revision = (((hackage."hspec")."2.9.4").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.2").revisions).default;
        "primitive".revision = (((hackage."primitive")."0.7.3.0").revisions).default;
        "servant-client-core".revision = (((hackage."servant-client-core")."0.18.3").revisions).default;
        "text-printer".revision = (((hackage."text-printer")."0.5.0.2").revisions).default;
        "binary-parser".revision = (((hackage."binary-parser")."0.5.7.1").revisions).default;
        "sop-core".revision = (((hackage."sop-core")."0.5.0.2").revisions).default;
        "hpc".revision = (((hackage."hpc")."0.6.1.0").revisions).default;
        "unliftio".revision = (((hackage."unliftio")."0.2.20.1").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.0").revisions).default;
        "streamly-bytestring".revision = (((hackage."streamly-bytestring")."0.1.4").revisions).default;
        "smallcheck".revision = (((hackage."smallcheck")."1.2.1").revisions).default;
        "rel8".revision = (((hackage."rel8")."1.1.0.0").revisions).default;
        "clock".revision = (((hackage."clock")."0.8.2").revisions).default;
        "clock".flags.llvm = false;
        "time-locale-compat".revision = (((hackage."time-locale-compat")."0.1.1.5").revisions).default;
        "time-locale-compat".flags.old-locale = false;
        "quickcheck-io".revision = (((hackage."quickcheck-io")."0.2.0").revisions).default;
        "data-bword".revision = (((hackage."data-bword")."0.1.0.1").revisions).default;
        "monad-time".revision = (((hackage."monad-time")."0.3.1.0").revisions).default;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "hspec-expectations".revision = (((hackage."hspec-expectations")."0.8.2").revisions).default;
        "basement".revision = (((hackage."basement")."0.0.12").revisions).default;
        "fused-effects".revision = (((hackage."fused-effects")."1.1.1.1").revisions).default;
        "old-locale".revision = (((hackage."old-locale")."1.0.0.7").revisions).default;
        "monad-control".revision = (((hackage."monad-control")."1.0.3.1").revisions).default;
        "fgl".revision = (((hackage."fgl")."5.7.0.3").revisions).default;
        "fgl".flags.containers042 = true;
        "tasty".revision = (((hackage."tasty")."1.4.2.1").revisions).default;
        "tasty".flags.unix = true;
        "tasty".flags.clock = true;
        "string-random".revision = (((hackage."string-random")."0.1.4.1").revisions).default;
        "wai-app-static".revision = (((hackage."wai-app-static")."3.1.7.2").revisions).default;
        "wai-app-static".flags.print = false;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "simple-sendfile".revision = (((hackage."simple-sendfile")."0.2.30").revisions).default;
        "simple-sendfile".flags.allow-bsd = true;
        "named".revision = (((hackage."named")."0.3.0.1").revisions).default;
        "rts".revision = (((hackage."rts")."1.0.1").revisions).default;
        "generic-lens".revision = (((hackage."generic-lens")."2.2.1.0").revisions).default;
        "network-byte-order".revision = (((hackage."network-byte-order")."0.1.6").revisions).default;
        "semialign".revision = (((hackage."semialign")."1.2.0.1").revisions).default;
        "semialign".flags.semigroupoids = true;
        "network-ip".revision = (((hackage."network-ip")."0.3.0.3").revisions).default;
        "OneTuple".revision = (((hackage."OneTuple")."0.3.1").revisions).default;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "mime-types".revision = (((hackage."mime-types")."0.1.0.9").revisions).default;
        "selective".revision = (((hackage."selective")."0.4.2").revisions).default;
        "blaze-markup".revision = (((hackage."blaze-markup")."0.8.2.8").revisions).default;
        "data-dword".revision = (((hackage."data-dword")."0.3.2.1").revisions).default;
        "reflection".revision = (((hackage."reflection")."2.1.6").revisions).default;
        "reflection".flags.template-haskell = true;
        "reflection".flags.slow = false;
        "hspec-discover".revision = (((hackage."hspec-discover")."2.9.4").revisions).default;
        "pretty-show".revision = (((hackage."pretty-show")."1.10").revisions).default;
        "template-haskell".revision = (((hackage."template-haskell")."2.16.0.0").revisions).default;
        "bytestring".revision = (((hackage."bytestring")."0.10.12.0").revisions).default;
        "tasty-rerun".revision = (((hackage."tasty-rerun")."1.1.18").revisions).default;
        "aeson-pretty".revision = (((hackage."aeson-pretty")."0.8.9").revisions).default;
        "aeson-pretty".flags.lib-only = false;
        "list-t".revision = (((hackage."list-t")."1.0.5.1").revisions).default;
        "aeson".revision = (((hackage."aeson")."1.5.6.0").revisions).default;
        "aeson".flags.cffi = false;
        "aeson".flags.fast = false;
        "aeson".flags.bytestring-builder = false;
        "aeson".flags.developer = false;
        "attoparsec-iso8601".revision = (((hackage."attoparsec-iso8601")."1.0.2.1").revisions).default;
        "attoparsec-iso8601".flags.fast = false;
        "attoparsec-iso8601".flags.developer = false;
        "graphviz".revision = (((hackage."graphviz")."2999.20.1.0").revisions).default;
        "graphviz".flags.test-parsing = false;
        "mono-traversable".revision = (((hackage."mono-traversable")."1.0.15.3").revisions).default;
        "ghci".revision = (((hackage."ghci")."8.10.7").revisions).default;
        "stm-containers".revision = (((hackage."stm-containers")."1.2").revisions).default;
        "pem".revision = (((hackage."pem")."0.2.4").revisions).default;
        "barbies".revision = (((hackage."barbies")."2.0.3.1").revisions).default;
        "matrix".revision = (((hackage."matrix")."0.3.6.1").revisions).default;
        "fakedata".revision = (((hackage."fakedata")."1.0.2").revisions).default;
        "zlib".revision = (((hackage."zlib")."0.6.2.3").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.pkg-config = false;
        "zlib".flags.bundled-c-zlib = false;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "th-compat".revision = (((hackage."th-compat")."0.1.3").revisions).default;
        "quickcheck-arbitrary-adt".revision = (((hackage."quickcheck-arbitrary-adt")."0.3.1.0").revisions).default;
        "text-latin1".revision = (((hackage."text-latin1")."0.3.1").revisions).default;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.deepseq = true;
        "tagged".flags.transformers = true;
        "file-embed".revision = (((hackage."file-embed")."0.0.15.0").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.4.0").revisions).default;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.4").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "postgresql-simple".revision = (((hackage."postgresql-simple")."0.6.4").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "hspec-golden-aeson".revision = (((hackage."hspec-golden-aeson")."0.9.0.0").revisions).default;
        "attoparsec".revision = (((hackage."attoparsec")."0.14.4").revisions).default;
        "attoparsec".flags.developer = false;
        "bytestring-strict-builder".revision = (((hackage."bytestring-strict-builder")."0.4.5.5").revisions).default;
        "fakedata-parser".revision = (((hackage."fakedata-parser")."0.1.0.0").revisions).default;
        "data-checked".revision = (((hackage."data-checked")."0.3").revisions).default;
        "opaleye".revision = (((hackage."opaleye")."0.7.6.2").revisions).default;
        "singleton-bool".revision = (((hackage."singleton-bool")."0.1.6").revisions).default;
        "unicode-data".revision = (((hackage."unicode-data")."0.3.0").revisions).default;
        "unicode-data".flags.ucd2haskell = false;
        "product-profunctors".revision = (((hackage."product-profunctors")."0.11.0.3").revisions).default;
        "blaze-html".revision = (((hackage."blaze-html")."0.9.1.2").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11.1").revisions).default;
        "ansi-terminal".flags.example = false;
        "libyaml".revision = (((hackage."libyaml")."0.1.2").revisions).default;
        "libyaml".flags.no-unicode = false;
        "libyaml".flags.system-libyaml = false;
        "unliftio-core".revision = (((hackage."unliftio-core")."0.2.0.1").revisions).default;
        "dec".revision = (((hackage."dec")."0.0.4").revisions).default;
        "th-lift".revision = (((hackage."th-lift")."0.8.2").revisions).default;
        "memory".revision = (((hackage."memory")."0.16.0").revisions).default;
        "memory".flags.support_basement = true;
        "memory".flags.support_bytestring = true;
        "memory".flags.support_deepseq = true;
        "memory".flags.support_foundation = true;
        "wai-extra".revision = (((hackage."wai-extra")."3.1.8").revisions).default;
        "wai-extra".flags.build-example = false;
        "blaze-builder".revision = (((hackage."blaze-builder")."0.4.2.2").revisions).default;
        "tmp-postgres".revision = (((hackage."tmp-postgres")."1.34.1.0").revisions).default;
        "postgresql-migration".revision = (((hackage."postgresql-migration")."0.2.1.3").revisions).default;
        "concise".revision = (((hackage."concise")."0.1.0.1").revisions).default;
        "focus".revision = (((hackage."focus")."1.0.3").revisions).default;
        "stm".revision = (((hackage."stm")."2.5.0.1").revisions).default;
        "warp".revision = (((hackage."warp")."3.3.18").revisions).default;
        "warp".flags.network-bytestring = false;
        "warp".flags.allow-sendfilefd = true;
        "warp".flags.warp-debug = false;
        "Only".revision = (((hackage."Only")."0.1").revisions).default;
        "fast-logger".revision = (((hackage."fast-logger")."3.1.1").revisions).default;
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "servant-auth".revision = (((hackage."servant-auth")."0.4.0.0").revisions).default;
        "cmdargs".revision = (((hackage."cmdargs")."0.10.21").revisions).default;
        "cmdargs".flags.quotation = true;
        "cmdargs".flags.testprog = false;
        "free".revision = (((hackage."free")."5.1.7").revisions).default;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.0.3.0").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.3.5.0").revisions).default;
        "hashable".flags.integer-gmp = true;
        "hashable".flags.random-initial-seed = false;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.6.6").revisions).default;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.mtl = true;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.three = false;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.generic-deriving = true;
        "semigroups".revision = (((hackage."semigroups")."0.20").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.template-haskell = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.tagged = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.transformers = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "semigroups".flags.hashable = true;
        "terminfo".revision = (((hackage."terminfo")."0.4.1.4").revisions).default;
        "haskell-lexer".revision = (((hackage."haskell-lexer")."1.1").revisions).default;
        "byteable".revision = (((hackage."byteable")."0.1.1").revisions).default;
        "vault".revision = (((hackage."vault")."0.3.1.5").revisions).default;
        "vault".flags.useghc = true;
        "indexed-traversable-instances".revision = (((hackage."indexed-traversable-instances")."0.1.1").revisions).default;
        "iproute".revision = (((hackage."iproute")."1.7.12").revisions).default;
        "text-builder".revision = (((hackage."text-builder")."0.6.6.3").revisions).default;
        "relude".revision = (((hackage."relude")."1.0.0.1").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "scientific".revision = (((hackage."scientific")."0.3.7.0").revisions).default;
        "scientific".flags.bytestring-builder = false;
        "scientific".flags.integer-simple = false;
        "boring".revision = (((hackage."boring")."0.2").revisions).default;
        "boring".flags.tagged = true;
        "ghc-heap".revision = (((hackage."ghc-heap")."8.10.7").revisions).default;
        "postgresql-libpq".revision = (((hackage."postgresql-libpq")."0.9.4.3").revisions).default;
        "postgresql-libpq".flags.use-pkg-config = false;
        "resourcet".revision = (((hackage."resourcet")."1.2.4.3").revisions).default;
        "binary".revision = (((hackage."binary")."0.8.8.0").revisions).default;
        "ap-normalize".revision = (((hackage."ap-normalize")."0.1.0.1").revisions).default;
        "ap-normalize".flags.test-with-clang = false;
        "bytestring-tree-builder".revision = (((hackage."bytestring-tree-builder")."0.2.7.9").revisions).default;
        "servant-streamly".revision = (((hackage."servant-streamly")."0.1.0.0").revisions).default;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.old-random = false;
        "QuickCheck".flags.templatehaskell = true;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.5").revisions).default;
        "safe-exceptions".revision = (((hackage."safe-exceptions")."0.1.7.2").revisions).default;
        "base64".revision = (((hackage."base64")."0.4.2.3").revisions).default;
        "http-client".revision = (((hackage."http-client")."0.6.4.1").revisions).default;
        "http-client".flags.network-uri = true;
        "tasty-hspec".revision = (((hackage."tasty-hspec")."1.2").revisions).default;
        "contravariant-extras".revision = (((hackage."contravariant-extras")."0.3.5.3").revisions).default;
        "auto-update".revision = (((hackage."auto-update")."0.1.6").revisions).default;
        "cryptohash-sha1".revision = (((hackage."cryptohash-sha1")."0.11.101.0").revisions).default;
        "cryptohash-md5".revision = (((hackage."cryptohash-md5")."0.11.101.0").revisions).default;
        "containers".revision = (((hackage."containers")."0.6.5.1").revisions).default;
        "indexed-profunctors".revision = (((hackage."indexed-profunctors")."0.1.1").revisions).default;
        "foldl".revision = (((hackage."foldl")."1.4.12").revisions).default;
        "http-date".revision = (((hackage."http-date")."0.0.11").revisions).default;
        "unix-compat".revision = (((hackage."unix-compat")."0.5.4").revisions).default;
        "unix-compat".flags.old-time = false;
        "case-insensitive".revision = (((hackage."case-insensitive")."1.2.1.0").revisions).default;
        "colour".revision = (((hackage."colour")."2.3.6").revisions).default;
        "StateVar".revision = (((hackage."StateVar")."1.2.2").revisions).default;
        };
      compiler = {
        version = "8.10.7";
        nix-name = "ghc8107";
        packages = {
          "ghc-boot" = "8.10.7";
          "ghc-boot-th" = "8.10.7";
          "ghc-prim" = "0.6.1";
          "pretty" = "1.1.3.6";
          "text" = "1.2.4.1";
          "base" = "4.14.3.0";
          "time" = "1.9.3";
          "array" = "0.5.4.0";
          "process" = "1.6.13.2";
          "ghc" = "8.10.7";
          "exceptions" = "0.10.4";
          "Cabal" = "3.2.1.0";
          "hpc" = "0.6.1.0";
          "directory" = "1.3.6.0";
          "mtl" = "2.2.2";
          "transformers" = "0.5.6.2";
          "rts" = "1.0.1";
          "parsec" = "3.1.14.0";
          "template-haskell" = "2.16.0.0";
          "bytestring" = "0.10.12.0";
          "ghci" = "8.10.7";
          "deepseq" = "1.4.4.0";
          "unix" = "2.7.2.2";
          "filepath" = "1.4.2.1";
          "stm" = "2.5.0.1";
          "integer-gmp" = "1.0.3.0";
          "terminfo" = "0.4.1.4";
          "ghc-heap" = "8.10.7";
          "binary" = "0.8.8.0";
          "containers" = "0.6.5.1";
          };
        };
      };
  extras = hackage:
    { packages = { realworld-haskell = ./.plan.nix/realworld-haskell.nix; }; };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "realworld-haskell" = {
            flags = {
              "stan" = lib.mkOverride 900 false;
              "ghcid" = lib.mkOverride 900 false;
              };
            };
          };
        })
    ({ lib, ... }:
      {
        packages = {
          "tasty-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "string-conversions".components.library.planned = lib.mkOverride 900 true;
          "bytestring-builder".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "setenv".components.library.planned = lib.mkOverride 900 true;
          "yaml".components.library.planned = lib.mkOverride 900 true;
          "password-types".components.setup.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "focus".components.library.planned = lib.mkOverride 900 true;
          "asn1-types".components.library.planned = lib.mkOverride 900 true;
          "higgledy".components.library.planned = lib.mkOverride 900 true;
          "primitive-extras".components.library.planned = lib.mkOverride 900 true;
          "port-utils".components.library.planned = lib.mkOverride 900 true;
          "hspec-core".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-text".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.sublibs."backend-data-internal".planned = lib.mkOverride 900 true;
          "data-serializer".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "uri-bytestring".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "markov-chain-usage-model".components.library.planned = lib.mkOverride 900 true;
          "hasql".components.library.planned = lib.mkOverride 900 true;
          "heaps".components.library.planned = lib.mkOverride 900 true;
          "cookie".components.library.planned = lib.mkOverride 900 true;
          "postgres-options".components.library.planned = lib.mkOverride 900 true;
          "cereal".components.library.planned = lib.mkOverride 900 true;
          "wai-logger".components.setup.planned = lib.mkOverride 900 true;
          "deferred-folds".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "servant".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "barbies".components.library.planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "appar".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "pem".components.library.planned = lib.mkOverride 900 true;
          "postgresql-migration".components.library.planned = lib.mkOverride 900 true;
          "memory".components.library.planned = lib.mkOverride 900 true;
          "http2".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "tmp-postgres".components.library.planned = lib.mkOverride 900 true;
          "tasty-rerun".components.library.planned = lib.mkOverride 900 true;
          "hspec".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.exes."realworld-haskell".planned = lib.mkOverride 900 true;
          "entropy".components.library.planned = lib.mkOverride 900 true;
          "ghc-byteorder".components.library.planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "wai".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "http-date".components.library.planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "fakedata-quickcheck".components.library.planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "data-textual".components.library.planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "binary-parser".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.library.planned = lib.mkOverride 900 true;
          "dec".components.library.planned = lib.mkOverride 900 true;
          "fakedata".components.library.planned = lib.mkOverride 900 true;
          "graphviz".components.library.planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "tf-random".components.library.planned = lib.mkOverride 900 true;
          "stm-containers".components.library.planned = lib.mkOverride 900 true;
          "postgresql-binary".components.library.planned = lib.mkOverride 900 true;
          "zlib".components.library.planned = lib.mkOverride 900 true;
          "concise".components.library.planned = lib.mkOverride 900 true;
          "libyaml".components.library.planned = lib.mkOverride 900 true;
          "tmp-postgres".components.exes."soak-test".planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "byteorder".components.library.planned = lib.mkOverride 900 true;
          "servant-server".components.exes."greet".planned = lib.mkOverride 900 true;
          "data-dword".components.library.planned = lib.mkOverride 900 true;
          "attoparsec-iso8601".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "blaze-markup".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-io".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "matrix".components.library.planned = lib.mkOverride 900 true;
          "fused-effects".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "text-printer".components.library.planned = lib.mkOverride 900 true;
          "sop-core".components.library.planned = lib.mkOverride 900 true;
          "entropy".components.setup.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "unliftio".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "asn1-encoding".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "selective".components.library.planned = lib.mkOverride 900 true;
          "jose".components.library.planned = lib.mkOverride 900 true;
          "word8".components.library.planned = lib.mkOverride 900 true;
          "http-client".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "tasty-smallcheck".components.library.planned = lib.mkOverride 900 true;
          "abstract-deque".components.library.planned = lib.mkOverride 900 true;
          "password".components.library.planned = lib.mkOverride 900 true;
          "primitive-unlifted".components.library.planned = lib.mkOverride 900 true;
          "servant-client".components.library.planned = lib.mkOverride 900 true;
          "stm-hamt".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "postgresql-libpq".components.setup.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.sublibs."backend-effect-internal".planned = lib.mkOverride 900 true;
          "servant-streamly".components.exes."servant-streamly-example".planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "HUnit".components.library.planned = lib.mkOverride 900 true;
          "http-media".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "cryptohash".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.tests."realworld-haskell-test".planned = lib.mkOverride 900 true;
          "time-manager".components.library.planned = lib.mkOverride 900 true;
          "bytestring-tree-builder".components.library.planned = lib.mkOverride 900 true;
          "iproute".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "generic-monoid".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "validation-selective".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-instances".components.library.planned = lib.mkOverride 900 true;
          "template-haskell-compat-v0208".components.library.planned = lib.mkOverride 900 true;
          "bytestring-strict-builder".components.library.planned = lib.mkOverride 900 true;
          "generic-data".components.library.planned = lib.mkOverride 900 true;
          "servant-client-core".components.library.planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "postgresql-simple".components.library.planned = lib.mkOverride 900 true;
          "wai-logger".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "atomic-primops".components.library.planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "http-types".components.library.planned = lib.mkOverride 900 true;
          "streamly-bytestring".components.library.planned = lib.mkOverride 900 true;
          "x509".components.library.planned = lib.mkOverride 900 true;
          "loop".components.library.planned = lib.mkOverride 900 true;
          "ap-normalize".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "base64".components.library.planned = lib.mkOverride 900 true;
          "wcwidth".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "boring".components.library.planned = lib.mkOverride 900 true;
          "text-builder".components.library.planned = lib.mkOverride 900 true;
          "charset".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "wai-extra".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "relude".components.library.planned = lib.mkOverride 900 true;
          "postgresql-libpq".components.library.planned = lib.mkOverride 900 true;
          "ansi-wl-pprint".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "servant-streamly".components.library.planned = lib.mkOverride 900 true;
          "password".components.setup.planned = lib.mkOverride 900 true;
          "blaze-html".components.library.planned = lib.mkOverride 900 true;
          "file-embed".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.exes."warp".planned = lib.mkOverride 900 true;
          "data-checked".components.library.planned = lib.mkOverride 900 true;
          "hspec-discover".components.exes."hspec-discover".planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "singleton-bool".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "unicode-data".components.library.planned = lib.mkOverride 900 true;
          "simple-sendfile".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-arbitrary-adt".components.library.planned = lib.mkOverride 900 true;
          "hspec-golden-aeson".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.sublibs."backend-in-mem-carrier-internal".planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "fgl".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "hasql-transaction".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "type-hint".components.library.planned = lib.mkOverride 900 true;
          "cryptonite".components.library.planned = lib.mkOverride 900 true;
          "servant-server".components.library.planned = lib.mkOverride 900 true;
          "parsers".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.sublibs."backend-api-internal".planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "password-types".components.library.planned = lib.mkOverride 900 true;
          "tree-diff".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "vault".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "asn1-parse".components.library.planned = lib.mkOverride 900 true;
          "generic-lens-core".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "unbounded-delays".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.sublibs."attoparsec-internal".planned = lib.mkOverride 900 true;
          "opaleye".components.library.planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "string-random".components.exes."hstrrand".planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "product-profunctors".components.library.planned = lib.mkOverride 900 true;
          "wai-app-static".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "network-ip".components.library.planned = lib.mkOverride 900 true;
          "realworld-haskell".components.sublibs."backend-rel8-carrier-internal".planned = lib.mkOverride 900 true;
          "network-byte-order".components.library.planned = lib.mkOverride 900 true;
          "tmp-postgres".components.exes."with-cache-loop".planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "mime-types".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "text-latin1".components.library.planned = lib.mkOverride 900 true;
          "fakedata-parser".components.library.planned = lib.mkOverride 900 true;
          "generic-lens".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "network-info".components.library.planned = lib.mkOverride 900 true;
          "hashtables".components.library.planned = lib.mkOverride 900 true;
          "streamly".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "bsb-http-chunked".components.library.planned = lib.mkOverride 900 true;
          "conduit".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "lockfree-queue".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "http-api-data".components.library.planned = lib.mkOverride 900 true;
          "uuid".components.library.planned = lib.mkOverride 900 true;
          "fusion-plugin-types".components.library.planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-state-machine".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "psqueues".components.library.planned = lib.mkOverride 900 true;
          "network".components.library.planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "show-combinators".components.library.planned = lib.mkOverride 900 true;
          "string-random".components.library.planned = lib.mkOverride 900 true;
          "contravariant-extras".components.library.planned = lib.mkOverride 900 true;
          "fast-logger".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "named".components.library.planned = lib.mkOverride 900 true;
          "streaming-commons".components.library.planned = lib.mkOverride 900 true;
          "cmdargs".components.library.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-md5".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "aeson-pretty".components.exes."aeson-pretty".planned = lib.mkOverride 900 true;
          "polyparse".components.library.planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "hspec-expectations".components.library.planned = lib.mkOverride 900 true;
          "basement".components.library.planned = lib.mkOverride 900 true;
          "hourglass".components.library.planned = lib.mkOverride 900 true;
          "rel8".components.library.planned = lib.mkOverride 900 true;
          "servant-auth-server".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "time-locale-compat".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "postgresql-migration".components.exes."migrate".planned = lib.mkOverride 900 true;
          "smallcheck".components.library.planned = lib.mkOverride 900 true;
          "data-endian".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "higgledy".components.setup.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "data-bword".components.library.planned = lib.mkOverride 900 true;
          "monad-time".components.library.planned = lib.mkOverride 900 true;
          "unix-time".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "auto-update".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring".components.library.planned = lib.mkOverride 900 true;
          "warp".components.library.planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "tasty-hspec".components.library.planned = lib.mkOverride 900 true;
          "servant-auth".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "byteable".components.library.planned = lib.mkOverride 900 true;
          "indexed-profunctors".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "easy-file".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "cryptohash-sha1".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }